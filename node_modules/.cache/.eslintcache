[{"D:\\projects\\noteApp\\app\\src\\index.js":"1","D:\\projects\\noteApp\\app\\src\\reportWebVitals.js":"2","D:\\projects\\noteApp\\app\\src\\App.js":"3","D:\\projects\\noteApp\\app\\src\\componet\\Register\\Register.jsx":"4","D:\\projects\\noteApp\\app\\src\\componet\\Navbar\\Navbar.jsx":"5","D:\\projects\\noteApp\\app\\src\\componet\\Home\\Home.jsx":"6","D:\\projects\\noteApp\\app\\src\\componet\\Login\\Login.jsx":"7","D:\\projects\\noteApp\\app\\src\\componet\\Notfound\\Notfound.jsx":"8"},{"size":814,"mtime":1650481236894,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1650479766061,"results":"11","hashOfConfig":"10"},{"size":1301,"mtime":1650640038516,"results":"12","hashOfConfig":"10"},{"size":3605,"mtime":1650830866473,"results":"13","hashOfConfig":"10"},{"size":1729,"mtime":1650753235584,"results":"14","hashOfConfig":"10"},{"size":4449,"mtime":1650828827237,"results":"15","hashOfConfig":"10"},{"size":2751,"mtime":1650828840621,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1650484474764,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"njlyt3",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\noteApp\\app\\src\\index.js",[],[],"D:\\projects\\noteApp\\app\\src\\reportWebVitals.js",[],[],"D:\\projects\\noteApp\\app\\src\\App.js",["46"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Home from './componet/Home/Home';\nimport Navbar from './componet/Navbar/Navbar';\nimport Login from './componet/Login/Login';\nimport Register from './componet/Register/Register';\nimport Notfound from './componet/Notfound/Notfound';\nimport { useEffect, useState } from 'react';\nimport {useNavigate} from 'react-router-dom'\nimport jwtDecode from 'jwt-decode';\n\nfunction App() {\nlet navigate=useNavigate();\n  const [userData, setuserData] = useState(null)\nuseEffect(() => {\nif (localStorage.getItem('userToken')) {\n  getuserDate()\n}\n}, [])\n\n  \n  function getuserDate() {\n    let decodeToken = jwtDecode(localStorage.getItem('userToken'))\n    console.log(decodeToken);\n    setuserData(decodeToken)\n  }\n  function logout() {\n    localStorage.removeItem('userToken')\n    setuserData(null)\n    navigate('/Login')\n  }\n\n  return (\n  <>\n  <Navbar logout={logout} userData={userData}/>\n<Routes>\n\n\n  <Route path='/' element={<Login/>} />\n  <Route path='Login' element={<Login getuser={getuserDate}/>} />\n  <Route path='Home' element={<Home/>} />\n  <Route path='Register' element={<Register/>} />\n  <Route path='*' element={<Notfound/>} />\n\n\n</Routes>\n  \n  </>\n  \n     \n \n    \n \n  );\n}\n\nexport default App;\n","D:\\projects\\noteApp\\app\\src\\componet\\Register\\Register.jsx",["47"],[],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Joi from 'joi'\r\nimport {useNavigate} from 'react-router-dom'\r\nexport default function Register() {\r\n    let navigate=useNavigate()\r\n    const [erro, seterro] = useState('')\r\n    const [isloading, setisloading] = useState(false)\r\n    const [errolist, seterrolist] = useState([])\r\n\r\nconst [user, setuser] = useState({\r\n  \r\n    first_name:'',\r\n    last_name:'',\r\n    age:'',\r\n    email:'',\r\n    password:'',\r\n\r\n})\r\nfunction getUser(e) {\r\n    let myuser={...user}\r\n    myuser[e.target.name]=e.target.value;\r\n    setuser(myuser)\r\n}\r\n\r\nasync function submitRigister(e) {\r\n    e.preventDefault() \r\n\r\n    let validationResult=validateRegisterForm(user)\r\n\r\n    if(validationResult.error)\r\n    {\r\n        setisloading(false)\r\n         seterrolist(validationResult.error.details)\r\n    }\r\n    else\r\n    {\r\n        let {data} =await axios.post(\"https://route-egypt-api.herokuapp.com/signup\",user)\r\n\r\n        if (data.message==='success') {\r\n         setisloading(false)\r\n         navigate('/Login')\r\n        }\r\n        else{\r\n            seterro(data.message)\r\n            setisloading(false)\r\n        }\r\n    }\r\n  \r\n}\r\n\r\nfunction validateRegisterForm(user) {\r\n    let schema = Joi.object({\r\n      first_name: Joi.string().alphanum().min(3).max(8).required(),\r\n      last_name: Joi.string().alphanum().min(3).max(8).required(),\r\n      age: Joi.number().min(16).max(80).required(),\r\n      email: Joi.string().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n      password: Joi.string().pattern(/^[A-Z][a-z]{3,8}$/),\r\n    });\r\n    return schema.validate(user,{abortEarly:false});\r\n  }\r\n  return (\r\n    <div>\r\n\r\n\r\n<div className=\"container my-5 py-5\">\r\n{errolist.map((erro,index)=>{\r\nif (index ==4)\r\n {\r\n    return <div key={index} className='alert alert-danger'> password invalid</div>\r\n}\r\nelse\r\n{\r\nreturn <div key={index} className='alert alert-danger'>{erro.message}</div>\r\n}\r\n\r\n})}\r\n                <div className=\"col-md-5 m-auto text-center\">\r\n                \r\n                    <form onSubmit={submitRigister} >\r\n                        <div className=\"form-group\">\r\n                            <input onChange={getUser}  placeholder=\"Enter your name\" name=\"first_name\" type=\"text\" className=\" form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group my-2 \">\r\n                            <input onChange={getUser}  placeholder=\"Enter your name\" name=\"last_name\" type=\"text\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group my-2 \">\r\n                            <input onChange={getUser}  placeholder=\"age\" name=\"age\" type=\"number\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input onChange={getUser}  placeholder=\"Enter email\" type=\"email\" name=\"email\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group my-2\">\r\n                            <input onChange={getUser}  placeholder=\"Enter you password\" type=\"password\" name=\"password\" className=\" form-control\" />\r\n                        </div>\r\n                       \r\n                        <button type='submit' className='btn btn-info'>{isloading?<i className='fas fa-spinner fa-spin'></i>:'register'}</button>\r\n                        {erro&&<div className='alert alert-danger'>{erro}</div>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","D:\\projects\\noteApp\\app\\src\\componet\\Navbar\\Navbar.jsx",[],[],"D:\\projects\\noteApp\\app\\src\\componet\\Home\\Home.jsx",["48","49","50","51","52","53","54"],[],"import React, { useEffect, useState } from 'react'\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from 'axios';\r\nexport default function Home() {\r\n    let token = localStorage.getItem(\"userToken\")\r\n    let decode = jwtDecode(token)\r\n    console.log(decode);\r\n    let baseurl = \"https://route-egypt-api.herokuapp.com/\"\r\n    let userID = decode._id\r\n    console.log(userID);\r\n\r\n    const [notes, setnotes] = useState([])\r\n\r\n    async function getAllNote() {\r\n        let { data } = await axios.get(baseurl + \"getUserNotes\", {\r\n            headers: {\r\n                token, userID\r\n            }\r\n        })\r\n\r\n        if (data.message == \"success\") {\r\n            setnotes(data.Notes)\r\n        }\r\n        else {\r\n            setnotes([])\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllNote()\r\n    }, [])\r\n\r\n    const [note, setnote] = useState({\r\n        title: \"\",\r\n        desc: \"\",\r\n        userID, token\r\n    })\r\n    function getnote(e) {\r\n        let myuser = { ...note }\r\n        myuser[e.target.name] = e.target.value;\r\n        setnote(myuser)\r\n    }\r\n\r\n    async function addNote(e) {\r\n        e.preventDefault()\r\n        let { data } = await axios.post(baseurl + \"addNote\", note)\r\n        console.log(data);\r\n        if (data.message == \"success\") {\r\n            getAllNote()}\r\n    }\r\n\r\n\r\n  async function deletNote(NoteID) {\r\n       let {data}= await axios.delete(baseurl +\"deleteNote\",{\r\n           data:{\r\n            NoteID,\r\n            token\r\n           }\r\n         \r\n       }) \r\n       getAllNote()\r\n    }\r\n    return (\r\n        <>\r\n\r\n\r\n\r\n\r\n            <div className=\"container my-5\">\r\n                <div className=\"col-md-12 text-end\">\r\n                    <a className=\"add p-2 btn\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                        <i className=\"fas fa-plus-circle\">\r\n                        </i> Add New</a>\r\n                </div>\r\n            </div>\r\n            {/*====================Modal =========================== */}\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <form onSubmit={addNote}  >\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <input onChange={getnote} placeholder=\"Type Title\" name=\"title\" className=\"form-control\" type=\"text\" />\r\n                                <textarea onChange={getnote} className=\"form-control my-2\" placeholder=\"Type your note\" name=\"desc\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                <button data-bs-dismiss=\"modal\" type=\"submit\" className=\"btn btn-info\"><i className=\"fas fa-plus-circle\"></i> Add Note</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            {/* <!-- ==========================Notes=============================== --> */}\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    {notes.map((note, index) => {\r\n                        return (\r\n\r\n                            <div key={index} className=\"col-md-4 my-4\">\r\n                                <div className=\"note p-4\">\r\n                                    <h3 className=\"float-start\">{note.title}</h3>\r\n                                    <a ><i className=\"fas fa-edit float-end edit\"></i></a>\r\n                                    <a onClick={()=>deletNote(note._id)} > <i className=\"fas fa-trash-alt float-end px-3 del\"></i></a>\r\n                                    <span className=\"clearfix\"></span>\r\n                                    <p>{note.desc}</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","D:\\projects\\noteApp\\app\\src\\componet\\Login\\Login.jsx",["55"],[],"import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Joi from 'joi'\r\nimport {useNavigate} from 'react-router-dom'\r\nexport default function Login(props) {\r\n    let navigate=useNavigate()\r\n    const [erro, seterro] = useState('')\r\n    const [isloading, setisloading] = useState(false)\r\n    const [errolist, seterrolist] = useState([])\r\n\r\nconst [user, setuser] = useState({\r\n  \r\n  \r\n    email:'',\r\n    password:'',\r\n\r\n})\r\nfunction getUser(e) {\r\n    let myuser={...user}\r\n    myuser[e.target.name]=e.target.value;\r\n    setuser(myuser)\r\n}\r\n\r\nasync function submitRigister(e) {\r\n    e.preventDefault() \r\n\r\n    let validationResult=validateLoginForm(user)\r\n\r\n    if(validationResult.error)\r\n    {\r\n        setisloading(false)\r\n         seterrolist(validationResult.error.details)\r\n    }\r\n    else\r\n    {\r\n        let {data} =await axios.post(\"https://route-egypt-api.herokuapp.com/signin\",user)\r\n\r\n        if (data.message==='success') {\r\n            localStorage.setItem('userToken',data.token)\r\n         setisloading(false)\r\n         props.getuser()\r\nnavigate('/Home')\r\n\r\n        }\r\n        else{\r\n            seterro(data.message)\r\n            setisloading(false)\r\n        }\r\n    }\r\n  \r\n}\r\n\r\nfunction validateLoginForm(user) {\r\n    let schema = Joi.object({\r\n      email: Joi.string().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n      password: Joi.string().pattern(/^[A-Z][a-z]{3,8}$/),\r\n    });\r\n    return schema.validate(user,{abortEarly:false});\r\n  }\r\n  return (\r\n    <div>\r\n\r\n\r\n<div className=\"container my-5 py-5\">\r\n{errolist.map((erro,index)=>{\r\nif (index ==4)\r\n {\r\n    return <div key={index} className='alert alert-danger'> password invalid</div>\r\n}\r\nelse\r\n{\r\nreturn <div key={index} className='alert alert-danger'>{erro.message}</div>\r\n}\r\n\r\n})}\r\n                <div className=\"col-md-5 m-auto text-center\">\r\n                \r\n                    <form onSubmit={submitRigister} >\r\n                        <div className=\"form-group\">\r\n                            <input onChange={getUser}  placeholder=\"Enter email\" type=\"email\" name=\"email\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group my-2\">\r\n                            <input onChange={getUser}  placeholder=\"Enter you password\" type=\"password\" name=\"password\" className=\" form-control\" />\r\n                        </div>\r\n                       \r\n                        <button type='submit' className='btn btn-info'>{isloading?<i className='fas fa-spinner fa-spin'></i>:'Login'}</button>\r\n                        {erro&&<div className='alert alert-danger'>{erro}</div>}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","D:\\projects\\noteApp\\app\\src\\componet\\Notfound\\Notfound.jsx",[],[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":68,"column":11,"nodeType":"62","messageId":"63","endLine":68,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":21,"column":26,"nodeType":"62","messageId":"63","endLine":21,"endColumn":28},{"ruleId":"64","severity":1,"message":"65","line":32,"column":8,"nodeType":"66","endLine":32,"endColumn":10,"suggestions":"67"},{"ruleId":"60","severity":1,"message":"61","line":49,"column":26,"nodeType":"62","messageId":"63","endLine":49,"endColumn":28},{"ruleId":"56","severity":1,"message":"68","line":55,"column":13,"nodeType":"58","messageId":"59","endLine":55,"endColumn":17},{"ruleId":"69","severity":1,"message":"70","line":72,"column":21,"nodeType":"71","endLine":72,"endColumn":102},{"ruleId":"69","severity":1,"message":"70","line":108,"column":37,"nodeType":"71","endLine":108,"endColumn":41},{"ruleId":"69","severity":1,"message":"70","line":109,"column":37,"nodeType":"71","endLine":109,"endColumn":75},{"ruleId":"60","severity":1,"message":"61","line":66,"column":11,"nodeType":"62","messageId":"63","endLine":66,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllNote'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"73","fix":"74"},"Update the dependencies array to be: [getAllNote]",{"range":"75","text":"76"},[816,818],"[getAllNote]"]